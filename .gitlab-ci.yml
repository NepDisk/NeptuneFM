image: debian:bookworm

stages:          # List of stages for jobs, and their order of execution
  - build
  - release

build-linux:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - apt-get update && apt-get install -y clang-15
    - echo "Compiling the code... [linux]"
    - clang-15 src/lump.c src/lodepng.c src/main.c src/cJSON.c -o followermaker -lm -target x86_64-pc-linux-gnu
    - echo "Compile complete."
    - echo "LINUXJOB_ID=$CI_JOB_ID" > linuxjob.env  # Create job.env in the artifacts directory
  after_script:
    - cat linuxjob.env  # Debug: Check the content of job.env
  artifacts:
    name: "Followermaker-linux"
    paths:
      - followermaker
      - "./Advanced templates"
      - "./Basic templates"
      - PLAYPAL.lmp
      - readme.txt
    untracked: false
    when: on_success
    access: all
    reports:
      dotenv: linuxjob.env  # Specify the path to the job.env file

build-windows:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - apt-get update && apt-get install -y clang-15 mingw-w64
    - echo "Compiling the code... [windows]"
    - clang-15 src/lump.c src/lodepng.c src/main.c src/cJSON.c -o followermaker.exe -lm --target=x86_64-w64-mingw32 --sysroot=/usr/x86_64-w64-mingw32 -L/usr/lib/gcc/x86_64-w64-mingw32/12-win32 -lgcc -lgcc_eh
    - echo "Compile complete."
    - echo "WINDOWSJOB_ID=$CI_JOB_ID" > windowsjob.env  # Create job.env in the artifacts directory
  after_script:
    - cat windowsjob.env  # Debug: Check the content of job.env
  artifacts:
    name: "Followermaker-windows"
    paths:
      - followermaker.exe
      - "./Advanced templates"
      - "./Basic templates"
      - PLAYPAL.lmp
      - readme.txt
    untracked: false
    when: on_success
    access: all
    reports:
      dotenv: windowsjob.env  # Specify the path to the job.env file

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
  script:
    - echo "Running the release job."
    - LINUXJOB_ID=$(cat linuxjob.env)  # Read JOB_ID from job.env
    - echo LINUXJOB_ID
    - WINDOWSJOB_ID=$(cat windowsjob.env)  # Read JOB_ID from job.env
    - echo WINDOWSJOB_ID
  release:                                         # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
    name: 'Followermaker nightly (?) r$CI_PIPELINE_IID'
    tag_name: 'r$CI_PIPELINE_IID'                # The version is incremented per pipeline.
    description: 'Public download of followermaker based on latest commit in main. The cutting edge. Beware of bugs!'
    ref: '$CI_COMMIT_SHA'                          # The tag is created from the pipeline SHA.
    assets:
      links:
        - name: 'Followermaker-windows.zip'
          url: '$CI_SERVER_URL/$CI_PROJECT_PATH/-/jobs/$WINDOWSJOB_ID/artifacts/download'
        - name: 'Followermaker-linux.zip'
          url: '$CI_SERVER_URL/$CI_PROJECT_PATH/-/jobs/$LINUXJOB_ID/artifacts/download'